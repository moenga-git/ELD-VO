# Generated by Django 4.2.7 on 2025-09-26 19:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supabase_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('time_base', models.CharField(choices=[('local', 'Local'), ('UTC', 'UTC')], default='local', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('start_lat', models.FloatField()),
                ('start_lng', models.FloatField()),
                ('pickup_lat', models.FloatField()),
                ('pickup_lng', models.FloatField()),
                ('dropoff_lat', models.FloatField()),
                ('dropoff_lng', models.FloatField()),
                ('cycle_hours_used', models.FloatField()),
                ('distance_miles', models.FloatField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('pdf_url', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trips.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leg_index', models.IntegerField()),
                ('start_lat', models.FloatField()),
                ('start_lng', models.FloatField()),
                ('end_lat', models.FloatField()),
                ('end_lng', models.FloatField()),
                ('distance_miles', models.FloatField()),
                ('duration_minutes', models.IntegerField()),
                ('geometry', models.JSONField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='trips.trip')),
            ],
            options={
                'ordering': ['leg_index'],
            },
        ),
        migrations.CreateModel(
            name='LogSheetDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('grid_json', models.JSONField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_sheet_days', to='trips.trip')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='DutyEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_index', models.IntegerField()),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('duty_status', models.CharField(choices=[('DRIVING', 'Driving'), ('ON_DUTY_NOT_DRIVING', 'On Duty Not Driving'), ('OFF_DUTY', 'Off Duty'), ('SLEEPER', 'Sleeper Berth')], max_length=20)),
                ('note', models.TextField(blank=True)),
                ('rule_applied', models.TextField()),
                ('explanation', models.TextField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duty_entries', to='trips.trip')),
            ],
            options={
                'ordering': ['start'],
            },
        ),
    ]
